# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Development

on:
  push:
    branches: [ Development ]
    paths:
      - 'node/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ Development ]
    paths:
      - 'node/**'
      - '.github/workflows/**'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, chrome, firefox]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: dont-code/core
          path: core
          ref: 'Development'
          token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Version
        if: ${{ success() && ( matrix.browser == 'chromium' )}}
        run: |
          cat package.json
          npm version prerelease -m "New dev release %s"
          cat package.json
          git add package.json
          git status
        working-directory: 'core/node/packages/core'
      - name: Install
        run: |
          npm install -g nx
          npm install --force
        working-directory: 'core/node'
      - name: Build
        run: |
          nx run core:build:production
          nx run core:test
        working-directory: 'core/node'
      - name: Version
        if: ${{ success() && ( matrix.browser == 'chromium' )}}
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
          git push
        working-directory: 'core/node/packages/core'
      - name: Publish
        if: ${{ success() && ( matrix.browser == 'chromium' )}}
        run: |
          npm publish core/node/dist/packages/core --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
